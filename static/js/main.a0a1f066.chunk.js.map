{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGood","addSelection","event","item","ctrlKey","includes","removeSelection","setState","good","replace","this","className","type","hidden","onClick","length","map","key","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+OAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAqFaC,E,4MAjFbC,MAAQ,CACNC,aAAc,I,EAGhBC,aAAe,SAACC,EAAOC,GAAU,IACvBH,EAAiB,EAAKD,MAAtBC,aAEHE,EAAME,QAMPJ,EAAaK,SAASF,GACxB,EAAKG,gBAAgBH,GAKvB,EAAKI,UAAS,SAAAR,GAAK,MACjB,CAAEC,aAAa,GAAD,OACPD,EAAMC,cAAgBG,GADf,OACsBJ,EAAMC,cAAN,YAA2BG,QAb/D,EAAKI,SAAS,CAAEP,aAAcG,K,EAiBlCG,gBAAkB,SAACE,GACjB,EAAKD,UAAS,SAAAR,GAAK,MACjB,CAAEC,aAAcD,EAAMC,aACnBS,QADa,YACAD,GAAQ,IACrBC,QAFa,UAEFD,EAFE,KAEO,S,uDAIjB,IAAD,OACCR,EAAiBU,KAAKX,MAAtBC,aAER,OACE,yBAAKW,UAAU,OACb,6CAEG,IACD,0BAAMA,UAAU,sBACbX,GAEF,IACD,4BACEY,KAAK,SACLC,QAASb,EACTW,UAAU,iCACVG,QAAS,kBAAM,EAAKP,SAAS,CAAEP,aAAc,OAE5C,MAIL,wCAEG,IACAH,EAAgBkB,QAGnB,wBAAIJ,UAAU,aACXd,EAAgBmB,KAAI,SAAAb,GAAI,OACvB,wBAAIc,IAAKd,GACP,4BACEQ,UAAWO,IAAW,cAAe,CACnC,wBAAyBlB,EAAaK,SAASF,KAEjDS,KAAK,SACLE,QAAS,SAAAZ,GAAK,OAAI,EAAKD,aAAaC,EAAOC,KAE1CA,a,GAxECgB,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a0a1f066.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGood: '',\n  }\n\n  addSelection = (event, item) => {\n    const { selectedGood } = this.state;\n\n    if (!event.ctrlKey) {\n      this.setState({ selectedGood: item });\n\n      return;\n    }\n\n    if (selectedGood.includes(item)) {\n      this.removeSelection(item);\n\n      return;\n    }\n\n    this.setState(state => (\n      { selectedGood:\n          `${state.selectedGood || item}${state.selectedGood && `, ${item}`}` }\n    ));\n  }\n\n  removeSelection = (good) => {\n    this.setState(state => (\n      { selectedGood: state.selectedGood\n        .replace(`, ${good}`, '')\n        .replace(`${good},`, '') }\n    ));\n  }\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected good:\n          {' '}\n          <span className=\"App__selected-good\">\n            {selectedGood}\n          </span>\n          {' '}\n          <button\n            type=\"button\"\n            hidden={!selectedGood}\n            className=\"App__button App__button--close\"\n            onClick={() => this.setState({ selectedGood: '' })}\n          >\n            {' '}\n          </button>\n        </h1>\n\n        <p>\n          All goods:\n          {' '}\n          {goodsFromServer.length}\n        </p>\n\n        <ul className=\"App__list\">\n          {goodsFromServer.map(item => (\n            <li key={item}>\n              <button\n                className={classNames('App__button', {\n                  'App__button--selected': selectedGood.includes(item),\n                })}\n                type=\"button\"\n                onClick={event => this.addSelection(event, item)}\n              >\n                {item}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}